" set showtabline=1
set termguicolors
set nu relativenumber
set cursorline
set tabstop=2 shiftwidth=2 softtabstop=2 expandtab
set numberwidth=5
set signcolumn=yes
set autoindent
set clipboard=unnamed
let mapleader = ","
set encoding=utf-8
set updatetime=100
set laststatus=2
set hidden
set splitright
set shell=/bin/fish

filetype plugin on
filetype indent on
" disable vi compatibility
set nocompatible

" Search down into a whitelist of subfolders
" Provides tab-completion for all file-related tasks
set path+=data_preparation_tools/**,docker/**,tests/**.py,tools/**,clinical_classification/**,configs/**,data_summary/**,deployment/**,projects/**,research/**,scripts/**,video_algorithms/**,valgo_common/**
" Display all matching files when we tab complete
set wildmenu wildignorecase
set wildignore+=*.egg-info/**,.*,**/__pycache__/**,*.o,*.obj,*.bak,*.exe,*.swp,tags
set wildoptions+=pum,fuzzy
set fillchars=vert:â”‚
set sessionoptions=buffers,curdir,tabpages,winsize
" Saving options in session and view files causes more problems than it
" solves, so disable it.
set sessionoptions-=options
set viewoptions-=options

" Make the escape key more responsive by decreasing the wait time for an
" escape sequence (e.g., arrow keys).
set ttimeout
set ttimeoutlen=100
" incremental search
set incsearch ignorecase smartcase
set scrolloff=4
" Disable a legacy behavior that can break plugin maps.
set nolangremap
set undofile
" Setup data dirs
let g:vimdata = expand("~/.local/share/") . 'vim-data'
let &directory=g:vimdata . '/swap//'
let &backupdir=g:vimdata . '/backup//'
let &undodir=g:vimdata . '/undo//'
let data_dir = has('nvim') ? stdpath('data') . '/site' : '~/.vim'

" tweaks for browsing
let g:netrw_banner=0        " disable annoying banner
let g:netrw_browse_split=4  " open in prior window
let g:netrw_altv=1          " open splits to the right
let g:netrw_liststyle=3     " tree view
" netrw_gitignore#Hide() causes netrw to be super slow on big repo
" let g:netrw_list_hide=netrw_gitignore#Hide()
let g:netrw_list_hide=',\(^\|\s\s\)\zs\.\S\+'

set background=dark
syntax on

" Builtin grep
if executable('rg')
  set grepprg=rg\ --vimgrep
endif

" Useful tips
" merging 2 blocks of line, put cursor on last line of first block and do :1,g/^/''+m.|-j!

" disable Background Color Erase
let &t_ut=''

" use tab to trigger omnifunc competion
" inoremap <Tab> <C-X><C-O>
" set omnifunc=syntaxcomplete#Complete
set completeopt=menuone,preview

" set wildmode=list:lastused
set wildcharm=<C-Z>

" General colors
" if has('gui_running') || has('nvim')
"   " zaibatsu
"   hi Normal     guifg=#f6f3e8 guibg=#242424
"   " retrobox
"   " hi Normal    guifg=#ebdbb2 guibg=#1c1c1c
" else
"   " Set the terminal default background and foreground colors, thereby
"   " improving performance by not needing to set these colors on empty cells.
"   " hi Normal guifg=NONE guibg=NONE ctermfg=NONE ctermbg=NONE
"   " zaibatsu
"   let &t_ti = &t_ti . "\033]10;#f6f3e8\007\033]11;#0e0024\007"
"   " retrobox
"   " let &t_ti = &t_ti . "\033]10;#ebdbb2\007\033]11;#1c1c1c\007"
"   let &t_te = &t_te . "\033]110\007\033]111\007"
" endif
" let &t_te = &t_te . "\033]110\007\033]111\007"


" let g:python_highlight_all=1
" Add lsp plugin
packadd lsp
packadd vim-fugitive
" packadd python-syntax


" autocmd BufEnter * set completepopup+=border:off
