vim9script

# set showtabline=1
set termguicolors
set nu relativenumber
set tabstop=2 shiftwidth=2 softtabstop=2 expandtab
set numberwidth=5 signcolumn=yes autoindent
set clipboard=unnamed
g:mapleader = ","
g:maplocalleader = ";"
set encoding=utf-8 updatetime=1000 laststatus=2 hidden splitright
set shell=/bin/bash
set shortmess+=TasS
set mouse=a
# set foldmethod=indent
set noshowmode

filetype plugin on
filetype indent on
# disable vi compatibility
if &compatible
  set nocompatible
endif

# Search down into a whitelist of subfolders
# Provides tab-completion for all file-related tasks
def SetPath(): string
  var path_list = []
  if isdirectory('.git') && executable('git')
    path_list = systemlist('git ls-tree -d --name-only -r HEAD')
    path_list->map((_, val) => val->substitute(' ', '\\ ', "g"))
  else
    path_list = systemlist('find . -maxdepth 1 ! -path "./.*" ! -path "./target" ! -path "./bin" ! -path "./build" ! -path "./*.egg-info" ! -path "__pycache__"  ! -path "dist" -type d')
    path_list->map((_, val) => val != "." ? val[2 : ] .. "/**" : val)
  endif
  return join(path_list, ",")
enddef
execute "set path=,," .. SetPath()

# Display all matching files when we tab complete
set wildmenu wildignorecase wildignore+=*.egg-info/*,.*,*/__pycache__/*,*.o,*.obj,*.bak,*.exe,*.swp,tags,*.orig
if has("patch-8.2.4325")
  set wildoptions+=pum,fuzzy
endif

if has('patch-9.1.0831')
  def FindGitFiles(cmdarg: string, cmdcomplete: bool): list<string>
      var fnames = systemlist('rg --files --color never .')
      return filter(fnames, (_, x) => x =~? cmdarg)
  enddef
  set findfunc=FindGitFiles
endif

# better looking diff
if has("patch-8.1.0360")
    # set diffopt+=internal,algorithm:patience
    set diffopt+=vertical,algorithm:histogram,indent-heuristic
endif
if has("patch-9.1.1009")
  set diffopt+=linematch:60
endif

set sessionoptions=buffers,curdir,tabpages,winsize
# Saving options in session and view files causes more problems than it
# solves, so disable it.
set sessionoptions-=options viewoptions-=options

# Make the escape key more responsive by decreasing the wait time for an
# escape sequence (e.g., arrow keys).
set ttimeout ttimeoutlen=100
# incremental search
set incsearch ignorecase smartcase hlsearch
set scrolloff=4
# Disable a legacy behavior that can break plugin maps.
set nolangremap
set undofile
# Setup data dirs
g:vimdata = expand("~/.local/share/") .. 'vim-data'
if !isdirectory(g:vimdata)
  mkdir(g:vimdata, "p")
endif
&directory = g:vimdata .. '/swap//'
&backupdir = g:vimdata .. '/backup//'
&undodir = g:vimdata .. '/undo//'
if !isdirectory(&undodir) | mkdir(&undodir, "p") | endif
if !isdirectory(&backupdir) | mkdir(&backupdir, "p") | endif
if !isdirectory(&directory) | mkdir(&directory, "p") | endif

# tweaks for browsing
g:netrw_banner = 0        # disable annoying banner
g:netrw_browse_split = 4  # open in prior window
g:netrw_altv = 1          # open splits to the right
g:netrw_liststyle = 3     # tree view
g:netrw_winsize = 10
# netrw_gitignore#Hide() causes netrw to be super slow on big repo
# g:netrw_list_hide=netrw_gitignore#Hide()
g:netrw_list_hide = ', \(^\|\s\s\)\zs\.\S\+'

set background=dark
syntax on

# Builtin grep
if executable('rg')
  set grepprg=rg\ -HS\ --no-heading\ --column\ -g\ \"!*.ipynb\"\ -g\ \"!*__pycache__*\"\ -g\ \"!target/**\"\ -g\ \"!build/**\"\ -g\ \"!**/dist/**\"
  set grepformat=%f:%l:%c:%m
else
  g:grepcmd = 'grep\ --color=never\ -REHInsi'
  for pattern in ['*.swp', '*.zwc', '*.un~', '*.pyc', '*.pyo', '*.ipynb', '*.orig']
    g:grepcmd ..= '\ --exclude=\"' .. pattern .. '\"'
  endfor 
   for pattern in ['*.egg-info', '__pycache__', '.git', 'target', 'bin', 'build', '.*_cache', '.cache', '.cargo', 'node_modules']
    g:grepcmd ..= '\ --exclude-dir=\"' .. pattern .. '\"'
  endfor
  execute 'set grepprg=' .. g:grepcmd
endif

# Useful tips
# merging 2 blocks of line, put cursor on last line of first block and do :1,g/^/''+m.|-j!

# disable Background Color Erase
&t_ut = ''

# use tab to trigger omnifunc competion
# inoremap <Tab> <C-X><C-O>
# set omnifunc=syntaxcomplete#Complete
# set completeopt=menuone,preview
set completeopt=menuone,popup,fuzzy completepopup=highlight:Pmenu
set list listchars=tab:›\ ,nbsp:․,trail:·,extends:…,precedes:…
set fillchars=vert:│
set backspace=indent,eol,start

# set wildmode=list:lastused
set wildcharm=<C-Z>

# in case we launch gvim (for some reason...) hide ugly menus
set guioptions=aegit
set guifont=Fantasque\ Sans\ Mono\ 19

if has("patch-9.1.0911")
  set messagesopt=wait:500,history:2000
endif

# Add plugins
packadd! comment
if has("patch-9.1.0497")
  packadd! nohlsearch
endif
packadd lsp
packadd! vim-fugitive
packadd! vim-gitgutter
# packadd! copilot.vim
packadd! devdocs.vim
# packadd scope.vim
# packadd vim-lsp
# packadd asyncomplete.vim
# packadd asyncomplete-buffer.vim
# packadd asyncomplete-lsp.vim
packadd wiki.vim
packadd jupyter-vim
packadd jupytext.vim
packadd auto-pairs

g:vimspector_enable_mappings = 'HUMAN'
# packadd! vimspector

g:jupyter_highlight_cells = 1
